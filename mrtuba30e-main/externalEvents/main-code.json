{
  "associatedLayout": "ObjectRepository",
  "lastChangeTimeStamp": 0,
  "name": "Main Code",
  "events": [
    {
      "colorB": 191,
      "colorG": 175,
      "colorR": 206,
      "creationTime": 0,
      "name": "AllEvents",
      "source": "",
      "type": "BuiltinCommonInstructions::Group",
      "events": [
        {
          "colorB": 228,
          "colorG": 176,
          "colorR": 74,
          "creationTime": 0,
          "name": "Initiate",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "DepartScene"
                  },
                  "parameters": [
                    ""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "ModVarScene"
                  },
                  "parameters": [
                    "itemDis",
                    "=",
                    "32"
                  ]
                }
              ],
              "events": [
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "SceneInstancesCount"
                      },
                      "parameters": [
                        "liftDoor",
                        "lift",
                        ">",
                        "0"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "CentreCamera"
                      },
                      "parameters": [
                        "",
                        "lift",
                        "",
                        "\"\"",
                        "0"
                      ]
                    }
                  ],
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "value": "Create"
                          },
                          "parameters": [
                            "",
                            "WallBox",
                            "lift.BoundingBoxRight()",
                            "lift.BoundingBoxTop()+64",
                            "\"\""
                          ]
                        },
                        {
                          "type": {
                            "value": "ChangeHeight"
                          },
                          "parameters": [
                            "WallBox",
                            "=",
                            "128"
                          ]
                        },
                        {
                          "type": {
                            "value": "ChangeWidth"
                          },
                          "parameters": [
                            "WallBox",
                            "=",
                            "32"
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "value": "Create"
                          },
                          "parameters": [
                            "",
                            "WallBox",
                            "lift.BoundingBoxLeft()-32",
                            "lift.BoundingBoxTop()+64",
                            "\"\""
                          ]
                        },
                        {
                          "type": {
                            "value": "ChangeHeight"
                          },
                          "parameters": [
                            "WallBox",
                            "=",
                            "128"
                          ]
                        },
                        {
                          "type": {
                            "value": "ChangeWidth"
                          },
                          "parameters": [
                            "WallBox",
                            "=",
                            "32"
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "value": "Create"
                          },
                          "parameters": [
                            "",
                            "WallBox",
                            "lift.BoundingBoxLeft()-32",
                            "lift.BoundingBoxTop()+32",
                            "\"\""
                          ]
                        },
                        {
                          "type": {
                            "value": "ChangeHeight"
                          },
                          "parameters": [
                            "WallBox",
                            "=",
                            "32"
                          ]
                        },
                        {
                          "type": {
                            "value": "ChangeWidth"
                          },
                          "parameters": [
                            "WallBox",
                            "=",
                            "lift.Width()/2"
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "value": "Create"
                          },
                          "parameters": [
                            "",
                            "WallBox",
                            "lift.BoundingBoxRight()-(lift.Width()/4)",
                            "lift.BoundingBoxTop()+32",
                            "\"\""
                          ]
                        },
                        {
                          "type": {
                            "value": "ChangeHeight"
                          },
                          "parameters": [
                            "WallBox",
                            "=",
                            "32"
                          ]
                        },
                        {
                          "type": {
                            "value": "ChangeWidth"
                          },
                          "parameters": [
                            "WallBox",
                            "=",
                            "lift.Width()/2"
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "value": "Create"
                          },
                          "parameters": [
                            "",
                            "WallBox",
                            "lift.BoundingBoxLeft()-32",
                            "lift.BoundingBoxBottom()",
                            "\"\""
                          ]
                        },
                        {
                          "type": {
                            "value": "ChangeHeight"
                          },
                          "parameters": [
                            "WallBox",
                            "=",
                            "32"
                          ]
                        },
                        {
                          "type": {
                            "value": "ChangeWidth"
                          },
                          "parameters": [
                            "WallBox",
                            "=",
                            "lift.Width()*1.5"
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::ForEach",
                  "object": "stoneWall",
                  "conditions": [],
                  "actions": [],
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "value": "Create"
                          },
                          "parameters": [
                            "",
                            "WallBox",
                            "stoneWall.X()",
                            "stoneWall.Y()+64",
                            "\"\""
                          ]
                        },
                        {
                          "type": {
                            "value": "SetSize"
                          },
                          "parameters": [
                            "WallBox",
                            "stoneWall.Width()",
                            "stoneWall.Height()-64"
                          ]
                        },
                        {
                          "type": {
                            "value": "LinkedObjects::LinkObjects"
                          },
                          "parameters": [
                            "",
                            "stoneWall",
                            "WallBox"
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "value": "Create"
                      },
                      "parameters": [
                        "",
                        "levelShower",
                        "0",
                        "0",
                        "\"GUI\""
                      ]
                    },
                    {
                      "type": {
                        "value": "BBText::SetBBText"
                      },
                      "parameters": [
                        "levelShower",
                        "=",
                        "\"Level: [b][i]\" + VariableString(lv) + \"[/i][/b]\""
                      ]
                    },
                    {
                      "type": {
                        "value": "SetCenter"
                      },
                      "parameters": [
                        "levelShower",
                        "=",
                        "480",
                        "=",
                        "480"
                      ]
                    },
                    {
                      "type": {
                        "value": "Create"
                      },
                      "parameters": [
                        "",
                        "liftDoor",
                        "lift.X()",
                        "lift.Y()",
                        ""
                      ]
                    },
                    {
                      "type": {
                        "value": "ChangeScale"
                      },
                      "parameters": [
                        "liftDoor",
                        "=",
                        "2"
                      ]
                    },
                    {
                      "type": {
                        "value": "Create"
                      },
                      "parameters": [
                        "",
                        "item",
                        "player.CenterX()",
                        "player.CenterY()",
                        "\"\""
                      ]
                    },
                    {
                      "type": {
                        "value": "ModVarObjetTxt"
                      },
                      "parameters": [
                        "item",
                        "type",
                        "=",
                        "\"hand\""
                      ]
                    },
                    {
                      "type": {
                        "value": "ChangeScale"
                      },
                      "parameters": [
                        "item",
                        "=",
                        "2"
                      ]
                    }
                  ],
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "value": "Wait"
                          },
                          "parameters": [
                            "1"
                          ]
                        },
                        {
                          "type": {
                            "value": "Tween::AddObjectOpacityTween"
                          },
                          "parameters": [
                            "levelShower",
                            "Tween",
                            "\"fadeOut\"",
                            "0",
                            "\"easeInOutExpo\"",
                            "400",
                            "yes"
                          ]
                        },
                        {
                          "type": {
                            "value": "Wait"
                          },
                          "parameters": [
                            "0.5"
                          ]
                        },
                        {
                          "type": {
                            "value": "SetAnimationName"
                          },
                          "parameters": [
                            "liftDoor",
                            "\"open\""
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "parameters": []
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [
            {
              "type": {
                "value": "Cache"
              },
              "parameters": [
                "WallBox"
              ]
            },
            {
              "type": {
                "value": "Cache"
              },
              "parameters": [
                "player"
              ]
            },
            {
              "type": {
                "value": "Cache"
              },
              "parameters": [
                "camZone"
              ]
            }
          ]
        },
        {
          "colorB": 228,
          "colorG": 176,
          "colorR": 74,
          "creationTime": 0,
          "name": "Entities",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": []
            },
            {
              "colorB": 107,
              "colorG": 71,
              "colorR": 0,
              "creationTime": 0,
              "name": "Z-Order (Y-sort)",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "type": "BuiltinCommonInstructions::ForEach",
                  "object": "entity",
                  "conditions": [],
                  "actions": [],
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "value": "ChangePlan"
                          },
                          "parameters": [
                            "entity",
                            "=",
                            "entity.BoundingBoxBottom()"
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "VarObjetTxt"
                      },
                      "parameters": [
                        "item",
                        "type",
                        "=",
                        "\"hand\""
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "ChangePlan"
                      },
                      "parameters": [
                        "item",
                        "=",
                        "bob.ZOrder()"
                      ]
                    }
                  ]
                }
              ],
              "parameters": []
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "name": "Player",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "value": "SeparateFromObjects"
                      },
                      "parameters": [
                        "player",
                        "wall",
                        ""
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "AnimationName"
                      },
                      "parameters": [
                        "liftDoor",
                        "\"close\""
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "SeparateFromObjects"
                      },
                      "parameters": [
                        "player",
                        "liftDoor",
                        ""
                      ]
                    }
                  ]
                },
                {
                  "colorB": 228,
                  "colorG": 176,
                  "colorR": 74,
                  "creationTime": 0,
                  "folded": true,
                  "name": "Camera",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "CollisionPoint"
                          },
                          "parameters": [
                            "camZone",
                            "player.CenterX()",
                            "player.CenterY()"
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "SetCameraCenterX"
                          },
                          "parameters": [
                            "",
                            "=",
                            "lerp(CameraCenterX(), camZone.CenterX(), 0.25)",
                            "\"\"",
                            "0"
                          ]
                        },
                        {
                          "type": {
                            "value": "SetCameraCenterY"
                          },
                          "parameters": [
                            "",
                            "=",
                            "lerp(CameraCenterY(), camZone.CenterY(), 0.25)",
                            "\"\"",
                            "0"
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "BuiltinCommonInstructions::Not"
                          },
                          "parameters": [],
                          "subInstructions": [
                            {
                              "type": {
                                "value": "CollisionPoint"
                              },
                              "parameters": [
                                "camZone",
                                "player.CenterX()",
                                "player.CenterY()"
                              ]
                            }
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "SetCameraCenterX"
                          },
                          "parameters": [
                            "",
                            "=",
                            "lerp(CameraCenterX(), player.CenterX(), 0.5)",
                            "\"\"",
                            "0"
                          ]
                        },
                        {
                          "type": {
                            "value": "SetCameraCenterY"
                          },
                          "parameters": [
                            "",
                            "=",
                            "lerp(CameraCenterY(), player.CenterY(), 0.5)",
                            "\"\"",
                            "0"
                          ]
                        }
                      ]
                    }
                  ],
                  "parameters": []
                },
                {
                  "colorB": 228,
                  "colorG": 176,
                  "colorR": 74,
                  "creationTime": 0,
                  "folded": true,
                  "name": "Animations",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "TopDownMovementBehavior::Speed"
                          },
                          "parameters": [
                            "player",
                            "TopDownMovement",
                            "<",
                            "12"
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "SetAnimationName"
                          },
                          "parameters": [
                            "bob",
                            "\"idle\""
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "TopDownMovementBehavior::Speed"
                          },
                          "parameters": [
                            "player",
                            "TopDownMovement",
                            ">=",
                            "12"
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "SetAnimationName"
                          },
                          "parameters": [
                            "bob",
                            "\"run\""
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "TopDownMovementBehavior::XVelocity"
                          },
                          "parameters": [
                            "player",
                            "TopDownMovement",
                            "<",
                            "-12"
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "FlipX"
                          },
                          "parameters": [
                            "bob",
                            "yes"
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "TopDownMovementBehavior::XVelocity"
                          },
                          "parameters": [
                            "player",
                            "TopDownMovement",
                            ">",
                            "12"
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "FlipX"
                          },
                          "parameters": [
                            "bob",
                            ""
                          ]
                        }
                      ]
                    }
                  ],
                  "parameters": []
                },
                {
                  "colorB": 80,
                  "colorG": 64,
                  "colorR": 28,
                  "creationTime": 0,
                  "folded": true,
                  "name": "Cool Wall Opacity",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "inverted": true,
                            "value": "CollisionPoint"
                          },
                          "parameters": [
                            "stoneWall",
                            "bob.CenterX()",
                            "bob.CenterY()"
                          ]
                        },
                        {
                          "type": {
                            "value": "ObjectVariableAsBoolean"
                          },
                          "parameters": [
                            "stoneWall",
                            "behind",
                            "True"
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "Tween::AddObjectOpacityTween"
                          },
                          "parameters": [
                            "stoneWall",
                            "Tween",
                            "\"showBehind\"",
                            "255",
                            "\"easeInOutExpo\"",
                            "400",
                            ""
                          ]
                        },
                        {
                          "type": {
                            "value": "SetObjectVariableAsBoolean"
                          },
                          "parameters": [
                            "stoneWall",
                            "behind",
                            "False"
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "CollisionPoint"
                          },
                          "parameters": [
                            "stoneWall",
                            "bob.CenterX()",
                            "bob.CenterY()"
                          ]
                        },
                        {
                          "type": {
                            "value": "ObjectVariableAsBoolean"
                          },
                          "parameters": [
                            "stoneWall",
                            "behind",
                            ""
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "Tween::AddObjectOpacityTween"
                          },
                          "parameters": [
                            "stoneWall",
                            "Tween",
                            "\"showBehind\"",
                            "155",
                            "\"easeInOutExpo\"",
                            "400",
                            ""
                          ]
                        },
                        {
                          "type": {
                            "value": "SetObjectVariableAsBoolean"
                          },
                          "parameters": [
                            "stoneWall",
                            "behind",
                            "True"
                          ]
                        }
                      ]
                    }
                  ],
                  "parameters": []
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "value": "MettreXY"
                      },
                      "parameters": [
                        "bob",
                        "=",
                        "player.CenterX()",
                        "=",
                        "player.Y()"
                      ]
                    }
                  ]
                },
                {
                  "colorB": 107,
                  "colorG": 71,
                  "colorR": 0,
                  "creationTime": 0,
                  "name": "Gun or items",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "VarObjetTxt"
                          },
                          "parameters": [
                            "item",
                            "type",
                            "=",
                            "\"hand\""
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "RotateTowardAngle"
                          },
                          "parameters": [
                            "item",
                            "AngleBetweenPositions(bob.CenterX(), bob.CenterY(), MouseX(), MouseY())",
                            "720",
                            ""
                          ]
                        },
                        {
                          "type": {
                            "value": "SetCenter"
                          },
                          "parameters": [
                            "item",
                            "=",
                            "lerp(item.CenterX(), bob.CenterX() + XFromAngleAndDistance(AngleBetweenPositions(bob.CenterX(), bob.CenterY(), MouseX(), MouseY()), 20), 0.5)",
                            "=",
                            "lerp(item.CenterY(), bob.CenterY() + YFromAngleAndDistance(AngleBetweenPositions(bob.CenterX(), bob.CenterY(), MouseX(), MouseY()), 25), 0.5)"
                          ]
                        },
                        {
                          "type": {
                            "value": "SetAnimationName"
                          },
                          "parameters": [
                            "item",
                            "GlobalVariableString(currentItem)"
                          ]
                        }
                      ],
                      "events": [
                        {
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "BuiltinCommonInstructions::CompareNumbers"
                              },
                              "parameters": [
                                "abs(item.Angle())",
                                ">",
                                "90"
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "FlipY"
                              },
                              "parameters": [
                                "item",
                                "yes"
                              ]
                            }
                          ]
                        },
                        {
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "BuiltinCommonInstructions::CompareNumbers"
                              },
                              "parameters": [
                                "abs(item.Angle())",
                                "<",
                                "90"
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "FlipY"
                              },
                              "parameters": [
                                "item",
                                "no"
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "VarObjetTxt"
                          },
                          "parameters": [
                            "item",
                            "type",
                            "=",
                            "\"0\""
                          ]
                        }
                      ],
                      "actions": [],
                      "events": [
                        {
                          "colorB": 228,
                          "colorG": 176,
                          "colorR": 74,
                          "creationTime": 0,
                          "name": "Pop up + Pick up",
                          "source": "",
                          "type": "BuiltinCommonInstructions::Group",
                          "events": [
                            {
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "Distance"
                                  },
                                  "parameters": [
                                    "item",
                                    "bob",
                                    "50",
                                    ""
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "PickNearest"
                                  },
                                  "parameters": [
                                    "item",
                                    "bob.X()",
                                    "bob.Y()",
                                    ""
                                  ]
                                }
                              ],
                              "actions": [],
                              "events": [
                                {
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "ObjectVariableAsBoolean"
                                      },
                                      "parameters": [
                                        "item",
                                        "popped",
                                        "False"
                                      ]
                                    }
                                  ],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "SetObjectVariableAsBoolean"
                                      },
                                      "parameters": [
                                        "item",
                                        "popped",
                                        "True"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "Create"
                                      },
                                      "parameters": [
                                        "",
                                        "ePop",
                                        "item.CenterX()",
                                        "item.BoundingBoxTop()",
                                        "\"\""
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "ChangeScale"
                                      },
                                      "parameters": [
                                        "ePop",
                                        "=",
                                        "0"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "Tween::AddObjectScaleTween"
                                      },
                                      "parameters": [
                                        "ePop",
                                        "Tween",
                                        "\"pop\"",
                                        "2",
                                        "2",
                                        "\"easeOutBack\"",
                                        "250",
                                        "",
                                        ""
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "LinkedObjects::LinkObjects"
                                      },
                                      "parameters": [
                                        "",
                                        "item",
                                        "ePop"
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "KeyPressed"
                                      },
                                      "parameters": [
                                        "",
                                        "e"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "BuiltinCommonInstructions::Once"
                                      },
                                      "parameters": []
                                    }
                                  ],
                                  "actions": [],
                                  "events": [
                                    {
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [
                                        {
                                          "type": {
                                            "value": "LinkedObjects::PickObjectsLinkedTo"
                                          },
                                          "parameters": [
                                            "",
                                            "ePop",
                                            "item",
                                            ""
                                          ]
                                        }
                                      ],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "Tween::AddObjectScaleTween"
                                          },
                                          "parameters": [
                                            "ePop",
                                            "Tween",
                                            "\"pop\"",
                                            "0",
                                            "0",
                                            "\"easeInBack\"",
                                            "200",
                                            "yes",
                                            ""
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "ModVarGlobalTxt"
                                          },
                                          "parameters": [
                                            "currentItem",
                                            "=",
                                            "item.AnimationName()"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "Delete"
                                          },
                                          "parameters": [
                                            "item",
                                            ""
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "inverted": true,
                                    "value": "Distance"
                                  },
                                  "parameters": [
                                    "item",
                                    "bob",
                                    "50",
                                    ""
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ObjectVariableAsBoolean"
                                  },
                                  "parameters": [
                                    "item",
                                    "popped",
                                    "True"
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "SetObjectVariableAsBoolean"
                                  },
                                  "parameters": [
                                    "item",
                                    "popped",
                                    "False"
                                  ]
                                }
                              ],
                              "events": [
                                {
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "LinkedObjects::PickObjectsLinkedTo"
                                      },
                                      "parameters": [
                                        "",
                                        "ePop",
                                        "item",
                                        ""
                                      ]
                                    }
                                  ],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "Tween::AddObjectScaleTween"
                                      },
                                      "parameters": [
                                        "ePop",
                                        "Tween",
                                        "\"pop\"",
                                        "0",
                                        "0",
                                        "\"easeInBack\"",
                                        "200",
                                        "yes",
                                        ""
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          "parameters": []
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": []
                    }
                  ],
                  "parameters": []
                }
              ],
              "parameters": []
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "folded": true,
              "name": "Enemy",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "colorB": 107,
                  "colorG": 71,
                  "colorR": 0,
                  "creationTime": 0,
                  "disabled": true,
                  "folded": true,
                  "name": "Ignore pls",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Comment",
                      "color": {
                        "b": 109,
                        "g": 230,
                        "r": 255,
                        "textB": 0,
                        "textG": 0,
                        "textR": 0
                      },
                      "comment": "Note: Boolean Mode controls wether enemy goes up and down or left and right. True= Left and Right, False= Up and down",
                      "comment2": ""
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "ObjectVariableAsBoolean"
                          },
                          "parameters": [
                            "Enemy_BackForth",
                            "Mode",
                            "False"
                          ]
                        }
                      ],
                      "actions": [],
                      "events": [
                        {
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "inverted": true,
                                "value": "FlippedY"
                              },
                              "parameters": [
                                "Enemy_BackForth"
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "AddForceXY"
                              },
                              "parameters": [
                                "Enemy_BackForth",
                                "0",
                                "-Enemy_BackForth.Variable(Speed)",
                                "0"
                              ]
                            }
                          ]
                        },
                        {
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "FlippedY"
                              },
                              "parameters": [
                                "Enemy_BackForth"
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "AddForceXY"
                              },
                              "parameters": [
                                "Enemy_BackForth",
                                "0",
                                "Enemy_BackForth.Variable(Speed)",
                                "0"
                              ]
                            }
                          ]
                        },
                        {
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "CollisionNP"
                              },
                              "parameters": [
                                "Enemy_BackForth",
                                "WallBox",
                                "Enemy_BackForth.PointY(\"WallCheckVert\")",
                                "",
                                "yes"
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "SetObjectVariableAsBoolean"
                              },
                              "parameters": [
                                "Enemy_BackForth",
                                "FlipChecked",
                                "False"
                              ]
                            }
                          ],
                          "events": [
                            {
                              "type": "BuiltinCommonInstructions::ForEach",
                              "object": "Enemy_BackForth",
                              "conditions": [],
                              "actions": [],
                              "events": [
                                {
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "FlippedY"
                                      },
                                      "parameters": [
                                        "Enemy_BackForth"
                                      ]
                                    }
                                  ],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "FlipY"
                                      },
                                      "parameters": [
                                        "Enemy_BackForth",
                                        "no"
                                      ]
                                    },
                                    {
                                      "type": {
                                        "value": "SetObjectVariableAsBoolean"
                                      },
                                      "parameters": [
                                        "Enemy_BackForth",
                                        "FlipChecked",
                                        "True"
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "FlippedY"
                                      },
                                      "parameters": [
                                        "Enemy_BackForth"
                                      ]
                                    }
                                  ],
                                  "actions": []
                                }
                              ]
                            },
                            {
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [],
                              "actions": [
                                {
                                  "type": {
                                    "value": "SeparateFromObjects"
                                  },
                                  "parameters": [
                                    "Enemy_BackForth",
                                    "WallBox",
                                    ""
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "BuiltinCommonInstructions::ForEach",
                          "object": "Enemy_BackForth",
                          "conditions": [
                            {
                              "type": {
                                "value": "CollisionPoint"
                              },
                              "parameters": [
                                "WallBox",
                                "Enemy_BackForth.PointX(\"WallCheckVert\")",
                                "Enemy_BackForth.PointY(\"WallCheckVert\")"
                              ]
                            }
                          ],
                          "actions": [],
                          "events": [
                            {
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "FlippedY"
                                  },
                                  "parameters": [
                                    "Enemy_BackForth"
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "FlipY"
                                  },
                                  "parameters": [
                                    "Enemy_BackForth",
                                    "no"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "Arreter"
                                  },
                                  "parameters": [
                                    "Enemy_BackForth"
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "ObjectVariableAsBoolean"
                          },
                          "parameters": [
                            "Enemy_BackForth",
                            "Mode",
                            "True"
                          ]
                        }
                      ],
                      "actions": [],
                      "events": [
                        {
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "inverted": true,
                                "value": "FlippedX"
                              },
                              "parameters": [
                                "Enemy_BackForth"
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "AddForceXY"
                              },
                              "parameters": [
                                "Enemy_BackForth",
                                "Enemy_BackForth.Variable(Speed)",
                                "0",
                                "0"
                              ]
                            }
                          ]
                        },
                        {
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "FlippedX"
                              },
                              "parameters": [
                                "Enemy_BackForth"
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "AddForceXY"
                              },
                              "parameters": [
                                "Enemy_BackForth",
                                "-Enemy_BackForth.Variable(Speed)",
                                "0",
                                "0"
                              ]
                            }
                          ]
                        },
                        {
                          "type": "BuiltinCommonInstructions::ForEach",
                          "object": "Enemy_BackForth",
                          "conditions": [
                            {
                              "type": {
                                "value": "CollisionPoint"
                              },
                              "parameters": [
                                "WallBox",
                                "Enemy_BackForth.PointX(\"WallCheckHoriz\")",
                                "Enemy_BackForth.PointY(\"WallCheckHoriz\")"
                              ]
                            }
                          ],
                          "actions": [],
                          "events": [
                            {
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "inverted": true,
                                    "value": "FlippedX"
                                  },
                                  "parameters": [
                                    "Enemy_BackForth"
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "FlipX"
                                  },
                                  "parameters": [
                                    "Enemy_BackForth",
                                    "yes"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "Arreter"
                                  },
                                  "parameters": [
                                    "Enemy_BackForth"
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "BuiltinCommonInstructions::ForEach",
                          "object": "Enemy_BackForth",
                          "conditions": [
                            {
                              "type": {
                                "value": "CollisionPoint"
                              },
                              "parameters": [
                                "WallBox",
                                "Enemy_BackForth.PointX(\"WallCheckHoriz\")",
                                "Enemy_BackForth.PointY(\"WallCheckHoriz\")"
                              ]
                            }
                          ],
                          "actions": [],
                          "events": [
                            {
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "FlippedX"
                                  },
                                  "parameters": [
                                    "Enemy_BackForth"
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "FlipX"
                                  },
                                  "parameters": [
                                    "Enemy_BackForth",
                                    "no"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "Arreter"
                                  },
                                  "parameters": [
                                    "Enemy_BackForth"
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "parameters": []
                },
                {
                  "colorB": 107,
                  "colorG": 71,
                  "colorR": 0,
                  "creationTime": 0,
                  "folded": true,
                  "name": "Back And Forth Boi",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Comment",
                      "color": {
                        "b": 109,
                        "g": 230,
                        "r": 255,
                        "textB": 0,
                        "textG": 0,
                        "textR": 0
                      },
                      "comment": "Note: Boolean Mode controls wether enemy goes up and down or left and right. True= Left and Right, False= Up and down",
                      "comment2": ""
                    },
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "ObjectVariableAsBoolean"
                          },
                          "parameters": [
                            "Enemy_BackForth",
                            "Mode",
                            "False"
                          ]
                        }
                      ],
                      "actions": [],
                      "events": [
                        {
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "inverted": true,
                                "value": "FlippedY"
                              },
                              "parameters": [
                                "Enemy_BackForth"
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "AddForceXY"
                              },
                              "parameters": [
                                "Enemy_BackForth",
                                "0",
                                "-Enemy_BackForth.Variable(Speed)",
                                "0"
                              ]
                            }
                          ]
                        },
                        {
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "FlippedY"
                              },
                              "parameters": [
                                "Enemy_BackForth"
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "AddForceXY"
                              },
                              "parameters": [
                                "Enemy_BackForth",
                                "0",
                                "Enemy_BackForth.Variable(Speed)",
                                "0"
                              ]
                            }
                          ]
                        },
                        {
                          "type": "BuiltinCommonInstructions::ForEach",
                          "object": "Enemy_BackForth",
                          "conditions": [
                            {
                              "type": {
                                "value": "CollisionPoint"
                              },
                              "parameters": [
                                "WallBox",
                                "Enemy_BackForth.PointX(\"WallCheckVert\")",
                                "Enemy_BackForth.PointY(\"WallCheckVert\")"
                              ]
                            }
                          ],
                          "actions": [],
                          "events": [
                            {
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "inverted": true,
                                    "value": "FlippedY"
                                  },
                                  "parameters": [
                                    "Enemy_BackForth"
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "FlipY"
                                  },
                                  "parameters": [
                                    "Enemy_BackForth",
                                    "yes"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "Arreter"
                                  },
                                  "parameters": [
                                    "Enemy_BackForth"
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "BuiltinCommonInstructions::ForEach",
                          "object": "Enemy_BackForth",
                          "conditions": [
                            {
                              "type": {
                                "value": "CollisionPoint"
                              },
                              "parameters": [
                                "WallBox",
                                "Enemy_BackForth.PointX(\"WallCheckVert\")",
                                "Enemy_BackForth.PointY(\"WallCheckVert\")"
                              ]
                            }
                          ],
                          "actions": [],
                          "events": [
                            {
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "FlippedY"
                                  },
                                  "parameters": [
                                    "Enemy_BackForth"
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "FlipY"
                                  },
                                  "parameters": [
                                    "Enemy_BackForth",
                                    "no"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "Arreter"
                                  },
                                  "parameters": [
                                    "Enemy_BackForth"
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "ObjectVariableAsBoolean"
                          },
                          "parameters": [
                            "Enemy_BackForth",
                            "Mode",
                            "True"
                          ]
                        }
                      ],
                      "actions": [],
                      "events": [
                        {
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "inverted": true,
                                "value": "FlippedX"
                              },
                              "parameters": [
                                "Enemy_BackForth"
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "AddForceXY"
                              },
                              "parameters": [
                                "Enemy_BackForth",
                                "Enemy_BackForth.Variable(Speed)",
                                "0",
                                "0"
                              ]
                            }
                          ]
                        },
                        {
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "FlippedX"
                              },
                              "parameters": [
                                "Enemy_BackForth"
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "AddForceXY"
                              },
                              "parameters": [
                                "Enemy_BackForth",
                                "-Enemy_BackForth.Variable(Speed)",
                                "0",
                                "0"
                              ]
                            }
                          ]
                        },
                        {
                          "type": "BuiltinCommonInstructions::ForEach",
                          "object": "Enemy_BackForth",
                          "conditions": [
                            {
                              "type": {
                                "value": "CollisionPoint"
                              },
                              "parameters": [
                                "WallBox",
                                "Enemy_BackForth.PointX(\"WallCheckHoriz\")",
                                "Enemy_BackForth.PointY(\"WallCheckHoriz\")"
                              ]
                            }
                          ],
                          "actions": [],
                          "events": [
                            {
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "inverted": true,
                                    "value": "FlippedX"
                                  },
                                  "parameters": [
                                    "Enemy_BackForth"
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "FlipX"
                                  },
                                  "parameters": [
                                    "Enemy_BackForth",
                                    "yes"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "Arreter"
                                  },
                                  "parameters": [
                                    "Enemy_BackForth"
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "BuiltinCommonInstructions::ForEach",
                          "object": "Enemy_BackForth",
                          "conditions": [
                            {
                              "type": {
                                "value": "CollisionPoint"
                              },
                              "parameters": [
                                "WallBox",
                                "Enemy_BackForth.PointX(\"WallCheckHoriz\")",
                                "Enemy_BackForth.PointY(\"WallCheckHoriz\")"
                              ]
                            }
                          ],
                          "actions": [],
                          "events": [
                            {
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "FlippedX"
                                  },
                                  "parameters": [
                                    "Enemy_BackForth"
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "FlipX"
                                  },
                                  "parameters": [
                                    "Enemy_BackForth",
                                    "no"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "Arreter"
                                  },
                                  "parameters": [
                                    "Enemy_BackForth"
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "parameters": []
                }
              ],
              "parameters": []
            }
          ],
          "parameters": []
        }
      ],
      "parameters": []
    }
  ]
}